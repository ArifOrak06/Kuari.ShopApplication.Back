// <auto-generated />
using Kuari.ShopApplication.Repository.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kuari.ShopApplication.Repository.Migrations
{
    [DbContext(typeof(ShopApplicationContext))]
    partial class ShopApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Kuari.ShopApplication.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Productss");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "yeni ürün",
                            Name = "Ürün1",
                            PictureUrl = "1.jpeg",
                            Price = 120m
                        },
                        new
                        {
                            Id = 2,
                            Description = "yeni ürün",
                            Name = "Ürün2",
                            PictureUrl = "2.jpeg",
                            Price = 150m
                        },
                        new
                        {
                            Id = 3,
                            Description = "yeni ürün",
                            Name = "Ürün3",
                            PictureUrl = "3.jpeg",
                            Price = 160m
                        });
                });

            modelBuilder.Entity("Kuari.ShopApplication.Core.Entities.ProductBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductBrands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Marka1",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Marka2",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Marka3",
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("Kuari.ShopApplication.Core.Entities.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Giyim",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Teknoloji",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Aksesuar",
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("Kuari.ShopApplication.Core.Entities.ProductBrand", b =>
                {
                    b.HasOne("Kuari.ShopApplication.Core.Entities.Product", "Product")
                        .WithOne("ProductBrand")
                        .HasForeignKey("Kuari.ShopApplication.Core.Entities.ProductBrand", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Kuari.ShopApplication.Core.Entities.ProductType", b =>
                {
                    b.HasOne("Kuari.ShopApplication.Core.Entities.Product", "Product")
                        .WithOne("ProductType")
                        .HasForeignKey("Kuari.ShopApplication.Core.Entities.ProductType", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Kuari.ShopApplication.Core.Entities.Product", b =>
                {
                    b.Navigation("ProductBrand")
                        .IsRequired();

                    b.Navigation("ProductType")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
